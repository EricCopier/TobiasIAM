openapi: 3.0.0
info:
  title: TobiasIAM
  version: '1.0'
  contact:
    name: Eric Copier
    email: e.copier@ymere.nl
    url: 'https://www.linkedin.com/in/ericcopier/'
  license:
    name: Stichting Ymere
  description: |-
    API Description to manage Users, Employees and Positions within Tobias AX. Tobias AX is a product of Aareon. With this API you are able to insert new users, update users (also deactivate them), assign and delete a role, add an delete a relation to an Employee and delete the users.
    Futhermore you can insert a new employee, add and delete contact details, update and delete the employee.
    You can also insert a new position, add and delete a reference to the employee, update and delete the position.
    If a title or a department does not exist, you can maintain the title or deparment (add, update, read, delete)
servers:
  - url: 'http://localhost:3000'
    description: TobiasAXProd
paths:
  /User:
    parameters: []
    get:
      summary: Tobias User Endpoints
      tags:
        - Tobias User Endpoints
      responses:
        '200':
          description: OK
          headers:
            Users:
              schema:
                type: string
              description: 1 or more users
          content:
            application/json:
              schema:
                type: object
                description: User properties
                properties:
                  UserId:
                    type: string
                    description: UserInfo(userInfo).id
                  DisplayName:
                    type: string
                    description: UserInfo(userInfo).name
                  Domain:
                    type: string
                    description: (userInfo).networkDomain
                  SamAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  AccountType:
                    type: string
                    description: UserInfo(userInfo).accountType
                  Company:
                    type:
                      - array
                      - string
                    description: UserInfo(userInfo).company
                    items: {}
                  Enable:
                    type: integer
                    description: UserInfo(userInfo).enable
                  ExternalUser:
                    description: UserInfo(userInfo).externalUser
                    type: integer
                  Emailaddress:
                    type: string
                    description: SysUserInfo(SysUserInfo).Email
                  SID:
                    type: string
                    description: UserInfo(userInfo).SID
                required:
                  - UserId
                  - DisplayName
                  - Domain
                  - SamAccountName
                  - AccountType
                  - Enable
                  - ExternalUser
                  - SID
              examples:
                Example-One user:
                  value:
                    Users:
                      - UserId: 238ecopi
                        DisplayName: Eric Copier
                        Domain: asp.local
                        SamAccountName: e.copier_ym
                        AccountType: Active Directory-gebruiker
                        Company: '100'
                        Enable: 1
                        ExternalUser: 0
                        Emailaddress: e.copier@ymere.nl
                        SID: S-1-5-21-114616164-2729428166-570199722-519998
                Example-Multiple users:
                  value:
                    Users:
                      - UserId: 001mvanz
                        DisplayName: 'Zon, Merlijn van (Aareon)'
                        Domain: offices.local
                        SamAccountName: 001mvanzon
                        AccountType: Active Directory-gebruiker
                        Company: '100'
                        Enable: 0
                        ExternalUser: 0
                        EmailAddress: merlijn.vanzon@aareon.nl
                        SID: S-1-5-21-736736335-1643130235-4022078510-28832
                      - UserId: 238ascha
                        DisplayName: 'Schalkwijk - Froeling, Annika'
                        Domain: asp.local
                        SamAccountName: a.schalkwijk.froe_ym
                        AccountType: Active Directory-gebruiker
                        Company: '100'
                        Enable: 0
                        ExternalUser: 0
                        EmailAddress: a.schalkwijk.froeling@ymere.nl
                        SID: S-1-5-21-114616164-2729428166-570199722-541935
                      - UserId: 238asoer
                        DisplayName: Aashni Soerdjbali
                        Domain: asp.local
                        SamAccountName: a.soerdjbali_ym
                        AccountType: Active Directory-gebruiker
                        Company: '100'
                        Enable: 0
                        ExternalUser: 0
                        EmailAddress: a.soerdjbali@ymere.nl
                        SID: S-1-5-21-114616164-2729428166-570199722-541994
                      - UserId: 238avan2
                        DisplayName: Alexander van Bruggen
                        Domain: asp.local
                        SamAccountName: a.van.bruggen_ym
                        AccountType: Active Directory-gebruiker
                        Company: '100'
                        Enable: 0
                        ExternalUser: 0
                        EmailAddress: A.van.Bruggen@ymere.nl
                        SID: S-1-5-21-114616164-2729428166-570199722-539660
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
        '404':
          description: Not Found
      operationId: get-User
      description: "Get all properties of a user within Tobias based on a UPN and Domain\n\nExample SQL Code:\nSELECT    UI.ID AS UserId\n        , UI.NAME as DisplayName\n\t, UI.NETWORKDOMAIN as Domain\n\t, UI.NETWORKALIAS as SamAccountName\n\t, CASE UI.[ACCOUNTTYPE] WHEN 0 THEN 'Active Directory-gebruiker' WHEN 1 THEN 'Active Directory-groep' WHEN 2 THEN 'Claimgebruiker' ELSE 'Onbekend' END AS AccountType\n\t, UI.COMPANY as Company\n\t, UI.Enable as Enable\n\t, UI.EXTERNALUSER as ExternalUser\n\t, SUI.EMAIL as EmailAddress\n\t, UI.SID as SID\nFROM    IAM.Tobias_AX_Prod.dbo.USERINFO AS UI LEFT OUTER JOIN\n        IAM.Tobias_AX_Prod.dbo.SYSUSERINFO AS SUI ON UI.ID = SUI.ID\nWhere UI.Networkdomain = 'asp.local' AND UI.NETWORKALIAS = 'e.copier_ym' FOR JSON PATH, ROOT('Users')\n"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: User identification or filtering
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: (userInfo).networkDomain
                Filter:
                  type: string
            examples:
              Example Get one user:
                value:
                  SAMAccountName: e.copier_ym
                  Domain: asp.local
                  Filter: ''
              Example Get all users from one domain:
                value:
                  SAMAccountName: ''
                  Domain: asp.local
                  Filter: ''
              Example-Get all disabled Users in one Domain:
                value:
                  SAMAccountName: ''
                  Domain: asp.local
                  Filter: Enable = False
        description: "Parameters for selecting User. SamAccountname in combination with Domain will return one user or the user is not found. \nif all the parameters are empty select all users.\n\nFilter is for future use.\nFilter can be used to get a subset of the users: all disabled users, only direct fields can be used and not related fiels e.g. all users with admin-role. -> this is not possible (yet).\n"
      security:
        - API Key - 1: []
      parameters: []
    post:
      summary: ''
      operationId: post-User
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  UserID:
                    type: string
                    description: UserInfo(userInfo).id
                  AccountType:
                    type: string
                    description: UserInfo(userInfo).accountType
                  SID:
                    type: string
                    description: UserInfo(userInfo).SID
                required:
                  - UserID
                  - AccountType
                  - SID
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
      description: |-
        Insert a user in Tobias AX. The user must already exists in the Active Directory, because Tobias AX will get this user from the Active Directory. Extra or supplementary fields are supplied so the registration can be done thoroughly.
        Standard a Systemuser-Role is applied to the user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: User properties
              properties:
                SamAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                DisplayName:
                  type: string
                  description: UserInfo(userInfo).name
                Company:
                  type: string
                  description: UserInfo(userInfo).company
                Enable:
                  type: integer
                  description: UserInfo(userInfo).enable
                EmailAddress:
                  type: string
                  description: SysUserInfo(SysUserInfo).Email
                ExternalUser:
                  type: integer
                  description: UserInfo(userInfo).externalUser
                Domain:
                  type: string
                  description: (userInfo).networkDomain
              required:
                - SamAccountName
                - DisplayName
                - Enable
                - ExternalUser
          application/xml:
            schema:
              type: object
              properties: {}
        description: All properties for inserting a user in Tobias AX
      tags:
        - Tobias User Endpoints
    delete:
      summary: ''
      operationId: delete-User
      responses:
        '200':
          description: OK
      description: 'Parameters for selecting User. SamAccountname in combination with Domain will return one user or the user is not found. If one user is found, the user is deleted.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: (userInfo).networkDomain
              required:
                - SAMAccountName
                - Domain
        description: ''
  /Employee:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  NickName:
                    type: string
                  Initials:
                    type: string
                  NamePrefix:
                    type: string
                  Lastname:
                    type: string
                  Salution:
                    type: string
                  EntryName:
                    type: string
                  SearchName:
                    type: string
                  Title:
                    type: string
                  Gender:
                    type: string
                  Startdate:
                    type: string
                  Enddate:
                    type: string
              examples:
                Example-One Employee:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Initials: E.
                        Nickname: Eric
                        NamePrefix: ''
                        Lastname: Copier
                        Salutation: meneer Copier
                        EntryName: De heer E. Copier
                        SearchName: 'Copier, Eric'
                        Title: Medewerker projecten
                        Gender: Mannelijk
                        EmailAddress: e.copier@ymere.nl
                        PhoneNr: 088 080 62 83
                        MobileNR: '0647100445'
                        StartDate: '2018-01-18'
                        EndDate: ''
                Example-Multiple Employees:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Initials: E.
                        Nickname: Eric
                        NamePrefix: ''
                        Lastname: Copier
                        Salutation: meneer Copier
                        EntryName: De heer E. Copier
                        SearchName: 'Copier, Eric'
                        Title: Medewerker projecten
                        Gender: Mannelijk
                        EmailAddress: e.copier@ymere.nl
                        PhoneNr: 088 080 62 83
                        MobileNR: '0647100445'
                        StartDate: '2018-01-18'
                        EndDate: ''
                      - EmployeeID: '8314'
                        Initials: P.
                        Nickname: Paul
                        NamePrefix: van der
                        Lastname: Klarenbeek
                        Salutation: meneer van der Klarenbeek
                        EntryName: De heer P. van der Klarenbeek
                        SearchName: 'Klarenbeek, Paul van der'
                        Title: Wijkbeheerder
                        Gender: Mannelijk
                        EmailAddress: p.van.der.Klarenbeek@ymere.nl
                        PhoneNr: 088 080 62 62
                        MobileNR: 684573545
                        StartDate: '2019-01-18'
                        EndDate: ''
      operationId: get-Employee
      description: "Get the properties of one Employee or a selection of Employees\n\nProposed SQL Code:\nSELECT   H.PERSONNELNUMBER AS EmployeeID \n\t\t,ISNULL(mdwDPT.INITIALS, '') AS Initials\n\t\t,P.FIRSTNAME AS Nickname\n\t\t,P.MIDDLENAME AS NamePrefix\n\t\t,P.LASTNAME AS Lastname\n\t\t,P.AR_INTRODUCTORY AS Salutation\n\t\t,P.AR_INTRODUCTORYNAME AS EntryName \n\t\t,P.LASTNAME + ', ' + RTRIM(P.FIRSTNAME + ' ' + ISNULL(P.MIDDLENAME, ''))  AS SearchName\n\t\t,WT.TITLEID AS Title\n\t\t,CASE mdwDPT.GENDER WHEN 1 THEN 'Mannelijk' WHEN 2 THEN 'Vrouwelijk' WHEN NULL \n\t\t\t\t\t\t\t\t\tTHEN 'Niet ingevuld' ELSE 'Onbekend' END AS Gender\n        ,CASE WHEN ISNULL(mdwDPT.PRIMARYCONTACTEMAIL, 0) <> 0 THEN\n            (SELECT        T3.LOCATOR\n            FROM            [IAM].[Tobias_AX_Prod].[dbo].[DMSDIRPARTYCOMMUNICATIONSVIEW] T3\n            WHERE        T3.RECID = mdwDPT.PRIMARYCONTACTEMAIL) ELSE '' END AS EmailAddress\n\t\t,CASE WHEN ISNULL(mdwDPT.PRIMARYCONTACTPHONE, 0) <> 0 THEN\n            (SELECT        T3.LOCATOR\n            FROM            [IAM].[Tobias_AX_Prod].[dbo].[DMSDIRPARTYCOMMUNICATIONSVIEW] T3\n            WHERE        T3.RECID = mdwDPT.PRIMARYCONTACTPHONE) ELSE '' END AS PhoneNr\n\t\t,CASE WHEN ISNULL(mdwDPT.AR_PRIMARYCONTACTMOBILEPHONE, 0) <> 0 THEN\n            (SELECT        T3.LOCATOR\n            FROM            [IAM].[Tobias_AX_Prod].[dbo].[DMSDIRPARTYCOMMUNICATIONSVIEW] T3\n            WHERE        T3.RECID = mdwDPT.AR_PRIMARYCONTACTMOBILEPHONE) ELSE '' END AS MobileNR\n\t\t, '2018-01-18' as StartDate\n\t\t, '' as EndDate\nFROM            IAM.Tobias_AX_Prod.dbo.HCMWORKER AS H\nINNER JOIN IAM.Tobias_AX_Prod.dbo.HCMWORKERTITLE AS HWT ON HWT.PARTITION = H.PARTITION AND HWT.WORKER = H.RECID\nINNER JOIN IAM.Tobias_AX_Prod.dbo.HCMTITLE AS WT ON WT.RECID = HWT.TITLE AND WT.PARTITION = HWT.PARTITION\nLEFT OUTER JOIN IAM.Tobias_AX_Prod.dbo.HCMPOSITIONWORKERASSIGNMENT AS PW ON PW.PARTITION = H.PARTITION AND PW.WORKER = H.RECID\nLEFT OUTER JOIN IAM.Tobias_AX_Prod.dbo.DIRPERSONNAME AS P ON P.PARTITION = H.PARTITION AND P.PERSON = H.PERSON\nLEFT OUTER JOIN IAM.Tobias_AX_Prod.dbo.dirpartytable AS mdwDPT ON mdwDPT.PARTITION = H.PARTITION AND mdwDPT.RECID = H.PERSON\nWHERE        (PW.VALIDFROM < GETDATE()) AND (PW.VALIDTO > GETDATE()) AND (HWT.VALIDFROM <= GETDATE()) AND (HWT.VALIDTO >= GETDATE()) AND (P.VALIDFROM < GETDATE()) AND (P.VALIDTO > GETDATE())\nAnd H.PERSONNELNUMBER = '6313'\tFOR JSON PATH, ROOT('Employee')"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
            examples:
              Example-One Employee:
                value:
                  Employees:
                    - EmployeeID: 6313
              Example-Multiple Employees:
                value:
                  Employees:
                    - EmployeeID: 6313
                    - EmployeeID: 8314
        description: Filter properties
    post:
      summary: ''
      operationId: post-Employee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  Result:
                    type: string
              examples:
                Example-Employee Inserted:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: OK
                Example-Title does not exists:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: Title does not exists
                Example-Employee already exists:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: EmployeeID already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
                NickName:
                  type: string
                Initials:
                  type: string
                NamePrefix:
                  type: string
                Lastname:
                  type: string
                Salutation:
                  type: string
                EntryName:
                  type: string
                SearchName:
                  type: string
                Title:
                  type: string
                Gender:
                  type: string
                Emailaddress:
                  type: string
                PhoneNR:
                  type: string
                MobileNR:
                  type: string
                StartDate:
                  type: string
                EndDate:
                  type: string
              required:
                - EmployeeID
                - NickName
                - Initials
                - Lastname
                - Salutation
                - EntryName
                - SearchName
                - Title
                - StartDate
            examples:
              Example-One Employee:
                value:
                  Employees:
                    - EmployeeID: '6313'
                      Initials: E.
                      Nickname: Eric
                      NamePrefix: ''
                      Lastname: Copier
                      Salutation: meneer Copier
                      EntryName: De heer E. Copier
                      SearchName: 'Copier, Eric'
                      Title: Medewerker projecten
                      Gender: Mannelijk
                      EmailAddress: e.copier@ymere.nl
                      PhoneNr: 088 080 62 83
                      MobileNR: '0647100445'
                      StartDate: '2018-01-18'
                      EndDate: ''
        description: |-
          If a Title is not availalable, an error message is returned, but processing will continue if multiple Employees are provided.
          If contactdetails are provided, the next values have to be set as default:
                Emailaddress: Type = "E-mailadres", Contactnummer/-adres = <Emailaddress>, Primair = True, Prive = False
                MobileNR: Type = "Telefoon mobiel", Contactnummer/-adres = <MobileNR>, Primair = True, Prive = False
                PhoneNR: Type = "Telefoon", Contactnummer/-adres = <PhoneNR>, Primair = True, Prive = False
               Omschrijving and Toestel will be empty.
      description: Insert a new Employee with his properties
    put:
      summary: ''
      operationId: put-Employee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  Result:
                    type: string
              examples:
                Example-Employee updated:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: OK
                Example-Title does not exists:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: Title does not exists
                Example-EmployeeID does not exists:
                  value:
                    Employees:
                      - EmployeeID: '6313'
                        Result: EmployeeID does not exists
      description: To update one or more properties of an Employee. Only the provided properties will be updated. The rest of the properties will remain the same.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
                NickName:
                  type: string
                Initials:
                  type: string
                NamePrefix:
                  type: string
                Lastname:
                  type: string
                Salution:
                  type: string
                EntryName:
                  type: string
                SearchName:
                  type: string
                Title:
                  type: string
                Gender:
                  type: string
                Startdate:
                  type: string
                EndDate:
                  type: string
              required:
                - EmployeeID
            examples:
              Example-Update Employee:
                value:
                  Employees:
                    - EmployeeID: '6313'
                      Initials: E.
                      Nickname: Eric
                      Lastname: Copier
                      Title: Medewerker projecten
        description: 'Only the provided properties will be updated. Beneath is a complete list of all the properties that can be provided, but only the EmployeeID is mandatory. If a properties is not provided, the value will remain the same.'
  /Position:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Position
    post:
      summary: ''
      operationId: post-Position
      responses:
        '200':
          description: OK
    put:
      summary: ''
      operationId: put-Position
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-Position
      responses:
        '200':
          description: OK
  /User/DisableEnable:
    put:
      summary: ''
      operationId: put-User-DisableEnable
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SAMAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  Domain:
                    type: string
                    description: (userInfo).networkDomain
                  Enable:
                    type: string
                    description: UserInfo(userInfo).enable
                  Result:
                    type: string
                    description: 'Result can be: "OK", "User not found", "Domain not Found", "Unable to set", ...(?)'
              examples:
                Example-One User:
                  value:
                    Users:
                      - SAMAccountName: e.copier_ym
                        Domain: asp.local
                        Enable: 0
                        Result: OK
                Example-Multiple Users:
                  value:
                    Users:
                      - SAMAccountName: e.copier_ym
                        Domain: asp.local
                        Enable: 0
                        Result: OK
                      - SAMAccountName: a.de.vries_ym
                        Domain: asp.local
                        Enable: 0
                        Result: User not found
                      - SAMAccountName: a.schalkwijk.froe_ym
                        Domain: asp.local
                        Enable: 1
                        Result: Unable to set
      description: Enable or disable users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: (userInfo).networkDomain
                Enable:
                  type: integer
                  description: UserInfo(userInfo).enable
            examples:
              Example-One User Disable:
                value:
                  Users:
                    - SAMAccountName: e.copier_ym
                      Domain: asp.local
                      Enable: 0
              Example-Multiple Users - Enable/Disable:
                value:
                  Users:
                    - SAMAccountName: e.copier_ym
                      Domain: asp.local
                      Enable: 0
                    - SAMAccountName: a.de.vries_ym
                      Domain: asp.local
                      Enable: 0
                    - SAMAccountName: a.schalkwijk.froe_ym
                      Domain: asp.local
                      Enable: 1
  /user/Role:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SAMAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  Domain:
                    type: string
                    description: UserInfo(userInfo).networkDomain
                  RoleID:
                    type: integer
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  RoleName:
                    type: string
                    description: |-
                      Name
                      (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  RoleDescription:
                    type: string
                    description: |-
                      Description
                      (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
              examples:
                Example-One User:
                  value:
                    RolesPerUser:
                      - SamAccountName: e.copier_ym
                        Domain: asp.local
                        DisplayName: Eric Copier
                        RoleID: 886351
                        RoleName: '-SYSADMIN-'
                        RoleDescription: '@SYS344031'
                      - SamAccountName: e.copier_ym
                        Domain: asp.local
                        DisplayName: Eric Copier
                        RoleID: 886356
                        RoleName: SystemUser
                        RoleDescription: '@SYS323380'
                Example-Multiple User:
                  value:
                    RolesPerUser:
                      - SamAccountName: a.grudzien_ym
                        Domain: asp.local
                        DisplayName: Alex Grudzien
                        RoleID: 886356
                        RoleName: SystemUser
                        RoleDescription: '@SYS323380'
                      - SamAccountName: a.grudzien_ym
                        Domain: asp.local
                        DisplayName: Alex Grudzien
                        RoleID: 1401443
                        RoleName: AR_FoxContactSeniorUser
                        RoleDescription: ''
                      - SamAccountName: a.grudzien_ym
                        Domain: asp.local
                        DisplayName: Alex Grudzien
                        RoleID: 1401444
                        RoleName: AR_FoxContactUser
                        RoleDescription: ''
                      - SamAccountName: a.grudzien_ym
                        Domain: asp.local
                        DisplayName: Alex Grudzien
                        RoleID: 1437068
                        RoleName: YM_CZ_MDW_KLANTCONTACT
                        RoleDescription: __CZ_MDW_KLANTCONTACT
                      - SamAccountName: e.copier_ym
                        Domain: asp.local
                        DisplayName: Eric Copier
                        RoleID: 886351
                        RoleName: '-SYSADMIN-'
                        RoleDescription: '@SYS344031'
                      - SamAccountName: e.copier_ym
                        Domain: asp.local
                        DisplayName: Eric Copier
                        RoleID: 886356
                        RoleName: SystemUser
                        RoleDescription: '@SYS323380'
      operationId: get-user-Role
      description: |-
        Get the Roles assigned to an user or a selection of users. Every user has al least one role (SystemUser).

        Example SQL Code:
        SELECT        Distinct UI.NETWORKALIAS as SamAccountName, UI.NETWORKDOMAIN as Domain, UI.NAME as DisplayName, ISNULL(SR.RoleHandle,'') as RoleID,  ISNULL(SR.NAME,'') AS RoleName, ISNULL(SR.Description,'') AS RoleDescription
        FROM            IAM.Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE AS SR RIGHT JOIN
                                 IAM.Tobias_AX_Prod.dbo.SECURITYUSERROLE AS SUR ON SR.ROLEHANDLE = SUR.SECURITYROLE RIGHT JOIN
                                 IAM.Tobias_AX_Prod.dbo.userinfo AS UI ON SUR.USER_ = UI.ID
        WHERE        UI.Networkdomain = 'asp.local' AND UI.NETWORKALIAS = 'e.copier_ym' or UI.Networkalias = 'a.grudzien_ym'
        FOR JSON PATH, ROOT('RolesPerUser')
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: UserInfo(userInfo).networkDomain
            examples:
              Example-One User:
                value:
                  RolesPerUser:
                    - SamAccountName: e.copier_ym
                      Domain: asp.local
              Example-Multiple User:
                value:
                  RolesPerUser:
                    - SamAccountName: e.copier_ym
                      Domain: asp.local
                    - SamAccountName: a.grudzien_ym
                      Domain: asp.local
              Example-Select all users in Domain:
                value:
                  RolesPerUser:
                    - SamAccountName: ''
                      Domain: asp.local
        description: Provide the selection paramaters
    post:
      summary: ''
      operationId: post-user-Role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SAMAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  Domain:
                    type: string
                    description: UserInfo(userInfo).networkDomain
                  RoleID:
                    type: number
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  Result:
                    type: string
                    description: 'Result can be: "OK", "User not found", "Role not found", "User already had this role", "Role cannot be assigned due to SoD-violation"'
      description: Assign a Role to an User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: UserInfo(userInfo).networkDomain
                RoleID:
                  type: integer
                  description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
              required:
                - SAMAccountName
                - Domain
                - RoleID
        description: Supply the key-fields for the user and the role.
    delete:
      summary: ''
      operationId: delete-user-Role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SAMAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  Domain:
                    type: string
                    description: UserInfo(userInfo).networkDomain
                  RoleID:
                    type: string
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  Result:
                    type: string
                    description: 'Result can be: "OK", "User not found", "Role was not assigned to this user"'
      description: Remove a Role from an User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SAMAccountName:
                  type: string
                  description: UserInfo(userInfo).networkAlias
                Domain:
                  type: string
                  description: UserInfo(userInfo).networkDomain
                RoleID:
                  type: integer
                  description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
              required:
                - SAMAccountName
                - Domain
                - RoleID
        description: Supply the key-fields for the user and the role.
  /Title:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Title
      description: ''
    post:
      summary: ''
      operationId: post-Title
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-Title
      responses:
        '200':
          description: OK
    parameters: []
  /User/Employee:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-User-EmployeeRelation
    post:
      summary: ''
      operationId: post-User-EmployeeRelation
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-User-EmployeeRelation
      responses:
        '200':
          description: OK
    parameters: []
  /Employee/Ending:
    put:
      summary: ''
      operationId: put-Employee-Ending
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  Result:
                    type: string
              examples:
                Example-Employee Ended:
                  value:
                    EmployeesEnding:
                      - EmployeeID: '6313'
                        Result: OK
                Example-EmployeeID does not exists:
                  value:
                    EmployeesEnding:
                      - EmployeeID: '6313'
                        Result: EmployeeID does not exists
      description: Set the enddate of the Employment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
                EndDate:
                  type: string
                  description: |-
                    EmploymentDuration_ValidTo
                    HcmEmployment(HcmEmployment).ValidTo
            examples:
              Example-One Employee:
                value:
                  EmployeesEnding:
                    - EmployeeID: '6313'
                      EndDate: '2020-03-31'
        description: ''
  /Position/Ending:
    put:
      summary: ''
      operationId: put-Position-Ending
      responses:
        '200':
          description: OK
  /Position/Manager:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Position-Manager
    put:
      summary: ''
      operationId: put-Position-Manager
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-Position-Manager
      responses:
        '200':
          description: OK
  /Position/Employee:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Position-Employee
    delete:
      summary: ''
      operationId: delete-Position-Employee
      responses:
        '200':
          description: OK
    post:
      summary: ''
      operationId: post-Position-Employee
      responses:
        '200':
          description: OK
  /Department:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-Position-Department
      description: 'Get all details of one or all Department(s) '
    post:
      summary: ''
      operationId: post-Position-Department
      responses:
        '200':
          description: OK
    delete:
      summary: ''
      operationId: delete-Position-Department
      responses:
        '200':
          description: OK
    parameters: []
  /Employee/Contactdetails:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  ContactType:
                    type: string
                  ContactNRorAddress:
                    type: string
                  Primary:
                    type: string
                  Private:
                    type: string
                  Description:
                    type: string
                  Extension:
                    type: string
              examples:
                Example-One Employee-3 contactdetails:
                  value:
                    EmployeesContactDetails:
                      - EmployeeID: '6313'
                        ContactType: E-mailadres
                        ContactNRorAddress: e.copier@ymere.nl
                        Primary: 1
                        Private: 0
                        Description: ''
                        Extension: ''
                      - EmployeeID: '6313'
                        ContactType: Telefoon
                        ContactNRorAddress: 088 080 62 83
                        Primary: 1
                        Private: 0
                        Description: ''
                        Extension: ''
                      - EmployeeID: '6313'
                        ContactType: Telefoon mobiel
                        ContactNRorAddress: '0647100445'
                        Primary: 1
                        Private: 0
                        Description: ''
                        Extension: ''
      operationId: get-Employee-Contactdetails
      description: Get the contactdetails of an Employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
            examples:
              Example-One Employee:
                value:
                  EmployeesContactDetails:
                    - EmployeeID: 6313
              Example-Multiple Employees:
                value:
                  EmployeesContactDetails:
                    - EmployeeID: 6313
                    - EmployeeID: 8314
    post:
      summary: ''
      operationId: post-Employee-Contactdetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  ContactType:
                    type: string
                  ContactNRorAddress:
                    type: string
                  Result:
                    type: string
              examples:
                Example-One Employee-3 contactdetails:
                  value:
                    EmployeesContactDetails:
                      - EmployeeID: '6313'
                        ContactType: E-mailadres
                        ContactNRorAddress: e.copier@ymere.nl
                        Result: OK
                      - EmployeeID: '6313'
                        ContactType: Telefoon
                        ContactNRorAddress: 088 080 62 83
                        Result: ContactNR or Address does already exists
                      - EmployeeID: '6313'
                        ContactType: Telefoon mobiel
                        ContactNRorAddress: '0647100445'
                        Result: Employee not found
      description: |-
        If contactdetails are provided, the next values have to be set as default:
              Emailaddress: Type = "E-mailadres", Contactnummer/-adres = <Emailaddress>, Primair = True, Prive = False
              MobileNR: Type = "Telefoon mobiel", Contactnummer/-adres = <MobileNR>, Primair = True, Prive = False
              PhoneNR: Type = "Telefoon", Contactnummer/-adres = <PhoneNR>, Primair = True, Prive = False
             Omschrijving and Toestel will be empty.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
                ContactType:
                  type: string
                ContactNRorAddress:
                  type: string
                Primary:
                  type: string
                Private:
                  type: string
                Description:
                  type: string
                Extension:
                  type: string
              required:
                - EmployeeID
                - ContactType
                - ContactNRorAddress
                - Primary
                - Private
            examples:
              Example-One Employee-3 contactdetails:
                value:
                  EmployeesContactDetails:
                    - EmployeeID: '6313'
                      ContactType: E-mailadres
                      ContactNRorAddress: e.copier@ymere.nl
                      Primary: 1
                      Private: 0
                    - EmployeeID: '6313'
                      ContactType: Telefoon
                      ContactNRorAddress: 088 080 62 83
                      Primary: 1
                      Private: 0
                      Description: Skype telefoonnummer
                      Extension: '6283'
                    - EmployeeID: '6313'
                      ContactType: Telefoon mobiel
                      ContactNRorAddress: '0647100445'
                      Primary: 1
                      Private: 0
        description: ''
    delete:
      summary: ''
      operationId: delete-Employee-Contactdetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  EmployeeID:
                    type: string
                  ContactType:
                    type: string
                  ContactNRorAddress:
                    type: string
                  Result:
                    type: string
                required:
                  - EmployeeID
                  - ContactType
                  - ContactNRorAddress
                  - Result
              examples:
                Example-Delete Employee ContactDetails:
                  value:
                    EmployeesContactDetails:
                      - EmployeeID: '6313'
                        ContactType: E-mailadres
                        ContactNRorAddress: e.copier@ymere.nl
                        Result: OK
                      - EmployeeID: '6313'
                        ContactType: Telefoon
                        ContactNRorAddress: 088 080 62 83
                        Result: ContactNR or Address does not exists
                      - EmployeeID: '6313'
                        ContactType: Telefoon mobiel
                        ContactNRorAddress: '0647100445'
                        Result: Employee not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EmployeeID:
                  type: string
                ContactType:
                  type: string
                ContactNRorAddress:
                  type: string
              required:
                - EmployeeID
                - ContactType
                - ContactNRorAddress
            examples:
              Example-Delete all Contactdetails:
                value:
                  EmployeesContactDetails:
                    - EmployeeID: '6313'
                      ContactType: E-mailadres
                      ContactNRorAddress: e.copier@ymere.nl
                    - EmployeeID: '6313'
                      ContactType: Telefoon
                      ContactNRorAddress: 088 080 62 83
                    - EmployeeID: '6313'
                      ContactType: Telefoon mobiel
                      ContactNRorAddress: '0647100445'
  /Role:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  RoleID:
                    type: integer
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  RoleName:
                    type: string
                    description: |-
                      Name
                      (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  RoleDescription:
                    type: string
                    description: |-
                      Description
                      (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
              examples:
                Example-One Role:
                  value:
                    Roles:
                      - RoleID: 1437194
                        RoleName: ZZ_VendSetupNumberSequenceMaintain
                        RoleDescription: Leveranciers - Boekstuknummers per boekjaar instellen
                Example-Multiple Roles:
                  value:
                    Roles:
                      - RoleID: 886351
                        RoleName: '-SYSADMIN-'
                        RoleDescription: '@SYS344031'
                      - RoleID: 1437180
                        RoleName: YM_FUNCTIONEELBEHEER_KLANT
                        RoleDescription: __FUNCTIONEELBEHEER_KLANT
                      - RoleID: 1437194
                        RoleName: ZZ_VendSetupNumberSequenceMaintain
                        RoleDescription: Leveranciers - Boekstuknummers per boekjaar instellen
                      - RoleID: 1437197
                        RoleName: YM_PMCContractsMaintain
                        RoleDescription: Contract - Nieuwe en bestaande contracten muteren (Excl leegstandscode)
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  RoleID:
                    type: integer
                  RoleName:
                    type: string
                  RoleDescription:
                    type: string
              examples:
                Example-One Role:
                  value:
                    Roles:
                      - RoleID: 1437197
                        RoleName: YM_PMCContractsMaintain
                        RoleDescription: Contract - Nieuwe en bestaande contracten muteren (Excl leegstandscode)
                Example-Multiple Roles:
                  value:
                    Roles:
                      - RoleID: 886351
                        RoleName: '-SYSADMIN-'
                        RoleDescription: '@SYS344031'
                      - RoleID: 1437180
                        RoleName: YM_FUNCTIONEELBEHEER_KLANT
                        RoleDescription: __FUNCTIONEELBEHEER_KLANT
                      - RoleID: 1437194
                        RoleName: ZZ_VendSetupNumberSequenceMaintain
                        RoleDescription: Leveranciers - Boekstuknummers per boekjaar instellen
                      - RoleID: 1437197
                        RoleName: YM_PMCContractsMaintain
                        RoleDescription: Contract - Nieuwe en bestaande contracten muteren (Excl leegstandscode)
      operationId: get-Role
      description: "Get the role or all roles\n\nExample SQL code:\nSELECT\t distinct RoleHandle as RoleID\n\t\t,Name as RoleName\n\t\t,Description as RoleDescription\nFROM    IAM.Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE \nWHERE\tRolehandle > 1000000\t\t--??? left(Description,1) <> '@' --> Selection of all user-roles, which can be selected by customers\n   OR RoleHandle = 886356 --> SystemUser\n   OR RoleHandle = 886351 --> -SYSADMIN-  \n   FOR JSON PATH, ROOT('Roles')"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RoleID:
                  type: integer
                  description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
            examples:
              Example-One Role:
                value:
                  Roles:
                    - RoleID: 886356
              Example-Multiple Roles:
                value:
                  Roles:
                    - RoleID: 886351
                    - RoleID: 886356
              Example-Select all:
                value:
                  Roles:
                    - RoleID: 0
        description: A integer to select the role. If empty or 0 then select all
  /Role/User:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  RoleID:
                    type: integer
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  RoleDescription:
                    type: string
                    description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
                  SAMAccountName:
                    type: string
                    description: UserInfo(userInfo).networkAlias
                  DisplayName:
                    type: string
                    description: UserInfo(userInfo).Name
              examples:
                'Example-One Role (Only one user is assigned to this role!)':
                  value:
                    UsersPerRole:
                      - RoleID: 1437180
                        RoleDescription: YM_FUNCTIONEELBEHEER_KLANT
                        SamAccountName: p.marcus_ym
                        DisplayName: Paul Marcus
                Example-Multiple Roles:
                  value:
                    UsersPerRole:
                      - RoleID: 886351
                        RoleDescription: '-SYSADMIN-'
                        SamAccountName: ''
                        DisplayName: ''
                      - RoleID: 886351
                        RoleDescription: '-SYSADMIN-'
                        SamAccountName: 238mhattar
                        DisplayName: Michael Hattar
                      - RoleID: 886351
                        RoleDescription: '-SYSADMIN-'
                        SamAccountName: a.maat_ym
                        DisplayName: Aart Maat
                      - RoleID: 886351
                        RoleDescription: '-SYSADMIN-'
                        SamAccountName: a.wilting_ym
                        DisplayName: Arno Wilting
                      - RoleID: 1437180
                        RoleDescription: YM_FUNCTIONEELBEHEER_KLANT
                        SamAccountName: p.marcus_ym
                        DisplayName: Paul Marcus
                      - RoleID: 1437197
                        RoleDescription: YM_PMCContractsMaintain
                        SamAccountName: ''
                        DisplayName: ''
      operationId: get-Role-User
      description: Get all users with a particular role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RoleID:
                  type: integer
                  description: RoleHandle (Tobias_AX_Prod_Model.dbo.ModelSECURITYROLE)
            examples:
              Example-One Role:
                value:
                  Roles:
                    - RoleID: 886351
              Example-Multiple Roles:
                value:
                  Roles:
                    - RoleID: 886351
                    - RoleID: 1437180
                    - RoleID: 1437197
components:
  schemas:
    unauthorized_response:
      title: unauthorized_response
      type: object
      properties:
        cod:
          type: integer
        Message:
          type: string
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
